% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/auth.R
\name{dryad_auth}
\alias{dryad_auth}
\title{Retrieve a Dryad token}
\usage{
dryad_auth(path = NULL)
}
\arguments{
\item{path}{(character) path to store the encrypted file. if not supplied,
we use the current working directory}
}
\value{
a token
}
\description{
First, check for a stored, encrypted token.
Second, check if that token is expired.
If it isn't expired use it; if it is expired get another token
Last, store that new token encrypted.
}
\details{
For use internally mostly to easily get a token with various
approaches. You shouldn't need to run this function yourself; it
is used internally where needed to fetch your token.

First, you need to have your Dryad client
id and secret. Get these by emailing \code{help@datadryad.org} - see
https://github.com/CDL-Dryad/dryad-app/blob/main/documentation/apis/submission.md#obtain-a-dryad-api-account
for details. Once you get your id and secret store them as
environment variables (see above) under the names \code{DRYAD_CLIENT_ID} for
the id and \code{DRYAD_CLIENT_SECRET} for the secret, respectively.

You'll need to set a secret key to encrypt your
Dryad OAuth token you receive from Dryad. The secret key can be anything
you want - just like any password you'd use - you could use a password
generator to make it, e.g., 1Password of Lastpass. Set an environment
variable with the name \code{DRYAD_KEY} with the value of the key you created,
like \code{DRYAD_KEY=yourkey}; ideally do so globally in your \code{.Renviron},
\code{.bash_profile}, \code{.zshrc}, or similar file; or do per each R session with
\code{\link[=Sys.setenv]{Sys.setenv()}}. See \link{Startup} for additional help on environment
variables. You'll get an error about this if this hasn't been done
or hasn't been done correctly.

Note that your token expires after 10 hours. We take care of checking if your
token is expired, and when expired we get a new token.

The token is stored in an encrypted file using package \pkg{sodium} locally
in your current working directory - but you can change the path with
the \code{path} parameter. If you delete this file we'll get a new token and
the file will be re-created.
}
\examples{
\dontrun{
tok <- dryad_auth()
tok
dryad_auth_test(tok)
}
}
